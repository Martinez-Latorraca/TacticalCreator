[{"G:\\Portfolio\\TacticalCreator\\TacticalCreator\\src\\index.js":"1","G:\\Portfolio\\TacticalCreator\\TacticalCreator\\src\\reportWebVitals.js":"2","G:\\Portfolio\\TacticalCreator\\TacticalCreator\\src\\App.js":"3","G:\\Portfolio\\TacticalCreator\\TacticalCreator\\src\\components\\navBar\\navBar.jsx":"4","G:\\Portfolio\\TacticalCreator\\TacticalCreator\\src\\components\\team\\team.jsx":"5","G:\\Portfolio\\TacticalCreator\\TacticalCreator\\src\\components\\field\\field.jsx":"6","G:\\Portfolio\\TacticalCreator\\TacticalCreator\\src\\components\\players\\player.jsx":"7","G:\\Portfolio\\TacticalCreator\\TacticalCreator\\src\\hooks\\useDrag.jsx":"8","G:\\Portfolio\\TacticalCreator\\TacticalCreator\\src\\components\\navBar\\squadSize.jsx":"9","G:\\Portfolio\\TacticalCreator\\TacticalCreator\\src\\components\\navBar\\squadColors.jsx":"10","G:\\Portfolio\\TacticalCreator\\TacticalCreator\\src\\components\\navBar\\colorPicker.jsx":"11"},{"size":552,"mtime":1651527436643,"results":"12","hashOfConfig":"13"},{"size":375,"mtime":1651527436644,"results":"14","hashOfConfig":"13"},{"size":1144,"mtime":1674599071183,"results":"15","hashOfConfig":"13"},{"size":2588,"mtime":1674575760242,"results":"16","hashOfConfig":"13"},{"size":487,"mtime":1674578995005,"results":"17","hashOfConfig":"13"},{"size":860,"mtime":1674600077686,"results":"18","hashOfConfig":"13"},{"size":1024,"mtime":1674598505822,"results":"19","hashOfConfig":"13"},{"size":1246,"mtime":1674598399377,"results":"20","hashOfConfig":"13"},{"size":778,"mtime":1652025621530,"results":"21","hashOfConfig":"13"},{"size":1155,"mtime":1654031886016,"results":"22","hashOfConfig":"13"},{"size":949,"mtime":1654031886015,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"b987cd",{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56"},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60"},"G:\\Portfolio\\TacticalCreator\\TacticalCreator\\src\\index.js",[],[],"G:\\Portfolio\\TacticalCreator\\TacticalCreator\\src\\reportWebVitals.js",[],[],"G:\\Portfolio\\TacticalCreator\\TacticalCreator\\src\\App.js",[],[],"G:\\Portfolio\\TacticalCreator\\TacticalCreator\\src\\components\\navBar\\navBar.jsx",[],[],"G:\\Portfolio\\TacticalCreator\\TacticalCreator\\src\\components\\team\\team.jsx",[],[],"G:\\Portfolio\\TacticalCreator\\TacticalCreator\\src\\components\\field\\field.jsx",[],[],"G:\\Portfolio\\TacticalCreator\\TacticalCreator\\src\\components\\players\\player.jsx",["61"],["62"],"import \"./player.css\";\r\nimport { useState, useRef, useEffect } from \"react\";\r\nimport playerImage from \"./img/g18003.png\";\r\nimport useDrag from \"../../hooks/useDrag\";\r\n\r\nconst Player = ({ playerNumber, colors }) => {\r\n  const divRef = useRef();\r\n  const [position, setPosition] = useState({ x: 0, y: 0 });\r\n\r\n  const onPlayerClick = (e) => {\r\n    setPosition({\r\n      x: position.x + e.movementX,\r\n      y: position.y + e.movementY,\r\n    });\r\n  };\r\n  // eslint-disable-next-line no-unused-vars\r\n  const drag = useDrag(divRef, [position], {\r\n    onDrag: onPlayerClick,\r\n  });\r\n\r\n  return (\r\n    <div\r\n      ref={divRef}\r\n      className=\"playerHome\"\r\n      style={{\r\n        backgroundImage: `url(${playerImage})`,\r\n        transform: `translateX(${position.x}px) translateY(${position.y}px)`,\r\n        color: colors.font,\r\n        border: `4px solid ${colors.border}`,\r\n        backgroundColor: colors.bgr,\r\n      }}\r\n      onDrag={onPlayerClick}\r\n    >\r\n      {playerNumber}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Player;\r\n","G:\\Portfolio\\TacticalCreator\\TacticalCreator\\src\\hooks\\useDrag.jsx",["63","64"],[],"import { useState, useEffect } from \"react\";\r\n\r\nconst useDrag = (ref, deps = [], options) => {\r\n  const {\r\n    onPointerDown = () => {},\r\n    onPointerUp = () => {},\r\n    onPointerMove = () => {},\r\n    onDrag = () => {},\r\n  } = options;\r\n\r\n  const [isDragging, setIsDragging] = useState(false);\r\n\r\n  const handlePointerDown = (e) => {\r\n    setIsDragging(true);\r\n\r\n    onPointerDown(e);\r\n  };\r\n\r\n  const handlePointerUp = (e) => {\r\n    setIsDragging(false);\r\n\r\n    onPointerUp(e);\r\n  };\r\n\r\n  const handlePointerMove = (e) => {\r\n    onPointerMove(e);\r\n\r\n    if (isDragging) {\r\n      onDrag(e);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const element = ref.current;\r\n    if (element) {\r\n      element.addEventListener(\"pointerdown\", handlePointerDown);\r\n      element.addEventListener(\"pointerup\", handlePointerUp);\r\n      element.addEventListener(\"pointermove\", handlePointerMove);\r\n\r\n      return () => {\r\n        element.removeEventListener(\"pointerdown\", handlePointerDown);\r\n        element.removeEventListener(\"pointerup\", handlePointerUp);\r\n        element.removeEventListener(\"pointermove\", handlePointerMove);\r\n      };\r\n    }\r\n\r\n    return () => {};\r\n  }, [...deps, isDragging]);\r\n\r\n  return { isDragging };\r\n};\r\n\r\nexport default useDrag;\r\n","G:\\Portfolio\\TacticalCreator\\TacticalCreator\\src\\components\\navBar\\squadSize.jsx",[],[],"G:\\Portfolio\\TacticalCreator\\TacticalCreator\\src\\components\\navBar\\squadColors.jsx",["65"],[],"import \"./squadColors.css\";\r\nimport { useEffect, useState } from \"react\";\r\nimport ColorPicker from \"./colorPicker\";\r\n\r\nconst SquadColors = ({ setSquadColors, colors }) => {\r\n  const [baseColor, setBaseColor] = useState(colors.font);\r\n  const [secondColor, setSecondColor] = useState(colors.border);\r\n  const [thirdColor, setThirdColor] = useState(colors.bgr);\r\n\r\n   useEffect(() => {\r\n    colors = {\r\n      font: baseColor, \r\n      border: secondColor, \r\n      bgr: thirdColor \r\n    };\r\n    setSquadColors(colors);\r\n  }, []);\r\n\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"content\">\r\n        <p className=\"title\">Select team design</p>\r\n        <ColorPicker\r\n          text={\"Base color\"}\r\n          color={setBaseColor}\r\n          defaultColor={baseColor} \r\n        ></ColorPicker>\r\n        <ColorPicker\r\n          text={\"Second color\"}\r\n          color={setSecondColor}\r\n          defaultColor={secondColor}\r\n        ></ColorPicker>\r\n        <ColorPicker\r\n          text={\"Third color\"}\r\n          color={setThirdColor}\r\n          defaultColor={thirdColor}\r\n        ></ColorPicker>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SquadColors;\r\n","G:\\Portfolio\\TacticalCreator\\TacticalCreator\\src\\components\\navBar\\colorPicker.jsx",["66"],[]," import { useState } from \"react\";\r\nimport { SketchPicker } from \"react-color\";\r\n\r\nconst ColorPicker = ({ text, colors, defaultColor}) => {\r\n  const [toggleColorPickerBase, setToggleColorPickerBase] = useState(false);\r\n  const [baseColorsPicked, setBaseColorsPicked] = useState();\r\n\r\n  const toggleBaseColor = () => {\r\n    setToggleColorPickerBase(!toggleColorPickerBase);\r\n  };\r\n\r\n  return (\r\n    <div className=\"wrapper-btn\">\r\n      <div\r\n        className=\"btn-color\"\r\n        style={{ backgroundColor: defaultColor }}\r\n        onClick={toggleBaseColor}\r\n      >\r\n        {toggleColorPickerBase && (\r\n          <div>\r\n            <SketchPicker\r\n              color={baseColorsPicked}\r\n              onChange={(e)=> colors(e.hex)}\r\n              style={{ userSelect: \"none\" }}\r\n            ></SketchPicker>\r\n          </div>\r\n        )}\r\n      </div>\r\n      <p className=\"subtitle\">{text}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ColorPicker;\r\n",{"ruleId":"67","severity":1,"message":"68","line":2,"column":28,"nodeType":"69","messageId":"70","endLine":2,"endColumn":37},{"ruleId":"67","severity":1,"message":"71","line":17,"column":9,"nodeType":"69","messageId":"70","endLine":17,"endColumn":13,"suppressions":"72"},{"ruleId":"73","severity":1,"message":"74","line":48,"column":6,"nodeType":"75","endLine":48,"endColumn":27,"suggestions":"76"},{"ruleId":"73","severity":1,"message":"77","line":48,"column":7,"nodeType":"78","endLine":48,"endColumn":14},{"ruleId":"73","severity":1,"message":"79","line":11,"column":14,"nodeType":"80","endLine":15,"endColumn":6},{"ruleId":"67","severity":1,"message":"81","line":6,"column":28,"nodeType":"69","messageId":"70","endLine":6,"endColumn":47},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'drag' is assigned a value but never used.",["82"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'handlePointerDown', 'handlePointerMove', 'handlePointerUp', and 'ref'. Either include them or remove the dependency array.","ArrayExpression",["83"],"React Hook useEffect has a spread element in its dependency array. This means we can't statically verify whether you've passed the correct dependencies.","SpreadElement","Assignments to the 'colors' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","ObjectExpression","'setBaseColorsPicked' is assigned a value but never used.",{"kind":"84","justification":"85"},{"desc":"86","fix":"87"},"directive","","Update the dependencies array to be: [handlePointerDown, handlePointerMove, handlePointerUp, isDragging, ref]",{"range":"88","text":"89"},[1162,1183],"[handlePointerDown, handlePointerMove, handlePointerUp, isDragging, ref]"]