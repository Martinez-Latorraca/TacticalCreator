[{"C:\\Users\\nicolas.martinez01\\Documents\\React\\TacticalCreator\\src\\index.js":"1","C:\\Users\\nicolas.martinez01\\Documents\\React\\TacticalCreator\\src\\App.js":"2","C:\\Users\\nicolas.martinez01\\Documents\\React\\TacticalCreator\\src\\reportWebVitals.js":"3","C:\\Users\\nicolas.martinez01\\Documents\\React\\TacticalCreator\\src\\components\\team\\team.jsx":"4","C:\\Users\\nicolas.martinez01\\Documents\\React\\TacticalCreator\\src\\components\\navBar\\navBar.jsx":"5","C:\\Users\\nicolas.martinez01\\Documents\\React\\TacticalCreator\\src\\components\\field\\field.jsx":"6","C:\\Users\\nicolas.martinez01\\Documents\\React\\TacticalCreator\\src\\components\\players\\player.jsx":"7","C:\\Users\\nicolas.martinez01\\Documents\\React\\TacticalCreator\\src\\components\\navBar\\squadColors.jsx":"8","C:\\Users\\nicolas.martinez01\\Documents\\React\\TacticalCreator\\src\\components\\navBar\\squadSize.jsx":"9","C:\\Users\\nicolas.martinez01\\Documents\\React\\TacticalCreator\\src\\components\\navBar\\colorPicker.jsx":"10","C:\\Users\\nicolas.martinez01\\Documents\\React\\TacticalCreator\\src\\hooks\\useDrag.jsx":"11"},{"size":552,"mtime":1653571910595,"results":"12","hashOfConfig":"13"},{"size":1660,"mtime":1654176466467,"results":"14","hashOfConfig":"13"},{"size":375,"mtime":1652104160870,"results":"15","hashOfConfig":"13"},{"size":485,"mtime":1653656055904,"results":"16","hashOfConfig":"13"},{"size":2387,"mtime":1654114292920,"results":"17","hashOfConfig":"13"},{"size":858,"mtime":1652104160848,"results":"18","hashOfConfig":"13"},{"size":1075,"mtime":1653656230584,"results":"19","hashOfConfig":"13"},{"size":1155,"mtime":1654026127252,"results":"20","hashOfConfig":"13"},{"size":778,"mtime":1652104160858,"results":"21","hashOfConfig":"13"},{"size":949,"mtime":1654026127239,"results":"22","hashOfConfig":"13"},{"size":1246,"mtime":1652104160867,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1a8jmsh",{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50"},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61"},"C:\\Users\\nicolas.martinez01\\Documents\\React\\TacticalCreator\\src\\index.js",[],[],"C:\\Users\\nicolas.martinez01\\Documents\\React\\TacticalCreator\\src\\App.js",[],["62"],"C:\\Users\\nicolas.martinez01\\Documents\\React\\TacticalCreator\\src\\reportWebVitals.js",[],[],"C:\\Users\\nicolas.martinez01\\Documents\\React\\TacticalCreator\\src\\components\\team\\team.jsx",[],[],"C:\\Users\\nicolas.martinez01\\Documents\\React\\TacticalCreator\\src\\components\\navBar\\navBar.jsx",["63","64","65","66"],[],"import React, { useEffect, useState } from \"react\";\r\nimport formations from \"../../components/formations/img/formationsIcon.png\";\r\nimport squadSizeIcon from \"./squadSize.png\";\r\nimport \"./navBar.css\";\r\nimport SquadSize from \"./squadSize\";\r\nimport SquadColors from \"./squadColors\";\r\n\r\nexport default function Navbar({ setSquadNumber, setHomeColors, setAwayColors }) {\r\n  const [toggleMenu, setToggleMenu] = useState(false);\r\n  const [toggleMenuSize, setToggleMenuSize] = useState(false);\r\n  const [toggleBtnFormations, setToggleBtnFormations] = useState(true);\r\n  const [toggleBtnSquadSize, setToggleBtnSquadSize] = useState(true);\r\n  const [squadSize, setSquadSize] = useState(8);\r\n  \r\n  \r\n  const awayColors = {\r\n    font:\"black\", \r\n    border:\"white\", \r\n    bgr: \"red\"\r\n  };\r\n  \r\n  const homeColors = {\r\n    font:\"red\", \r\n    border:\"black\", \r\n    bgr: \"white\"\r\n  };\r\n  \r\n  const [squadHomeColors, setSquadHomeColors] = useState(homeColors)\r\n  const [squadAwayColors, setSquadAwayColors] = useState(awayColors)\r\n\r\n  const toggleNav = () => {\r\n    setToggleMenu(!toggleMenu);\r\n    setToggleBtnFormations(!toggleBtnFormations);\r\n  };\r\n\r\n  const toggleSquadSize = () => {\r\n    setToggleMenuSize(!toggleMenuSize);\r\n    setToggleBtnSquadSize(!toggleBtnSquadSize);\r\n  };\r\n  useEffect(() => {\r\n    setSquadNumber(squadSize);\r\n    setHomeColors(squadHomeColors)\r\n    setAwayColors(squadAwayColors)\r\n  });\r\n\r\n  return (\r\n    <nav>\r\n        <div onClick={toggleNav} className=\"btn-formations\">\r\n          <img src={formations} alt=\"\" />\r\n        </div>\r\n        <div onClick={toggleSquadSize} className=\"btn-squad-size\">\r\n          <img src={squadSizeIcon} alt=\"\" />\r\n        </div>\r\n      {toggleMenu && (\r\n        <ul className=\"list\">\r\n          <a href=\"#\" className=\"close\" onClick={toggleNav}></a>\r\n          <li className=\"items\">Home</li>\r\n          <li className=\"items\">Services</li>\r\n          <li className=\"items\">Contact</li>\r\n        </ul>\r\n      )}\r\n      {toggleMenuSize && (\r\n        <ul className=\"list\">\r\n          <a href=\"#\" className=\"close\" onClick={toggleSquadSize}></a>\r\n          <SquadSize setSquadSize={setSquadSize}></SquadSize>\r\n          <SquadColors setSquadColors={setSquadHomeColors} colors={homeColors}></SquadColors>\r\n          <SquadColors setSquadColors={setSquadAwayColors} colors={awayColors}></SquadColors>\r\n        </ul>\r\n      )}\r\n    </nav>\r\n  );\r\n}\r\n","C:\\Users\\nicolas.martinez01\\Documents\\React\\TacticalCreator\\src\\components\\field\\field.jsx",[],[],"C:\\Users\\nicolas.martinez01\\Documents\\React\\TacticalCreator\\src\\components\\players\\player.jsx",["67"],["68"],"import \"./player.css\";\r\nimport { useState, useRef, useEffect } from \"react\";\r\nimport playerImage from \"./img/g18003.png\";\r\nimport useDrag from \"../../hooks/useDrag\";\r\n\r\n\r\nconst Player = ({ playerNumber, colors }) => {\r\n  const divRef = useRef();\r\n  const [position, setPosition] = useState({ x: 0, y: 0 });\r\n\r\n  console.log(\"colors playr\", colors)\r\n\r\n  const onPlayerClick = (e) => {\r\n    setPosition({\r\n      x: position.x + e.movementX,\r\n      y: position.y + e.movementY,\r\n    });\r\n  };\r\n  // eslint-disable-next-line no-unused-vars\r\n  const drag = useDrag(divRef, [position], {\r\n    onDrag: onPlayerClick,\r\n  });\r\n  \r\n  \r\n  return (\r\n    <div\r\n      ref={divRef}\r\n      className=\"playerHome\"\r\n      style={{\r\n        backgroundImage: `url(${playerImage})`,\r\n        transform: `translateX(${position.x}px) translateY(${position.y}px)`,\r\n        color: colors.font,\r\n        border: `4px solid ${colors.border}`,\r\n        backgroundColor: colors.bgr,\r\n      }}\r\n      onDrag={onPlayerClick}\r\n    >\r\n      {playerNumber}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Player;\r\n\r\n","C:\\Users\\nicolas.martinez01\\Documents\\React\\TacticalCreator\\src\\components\\navBar\\squadColors.jsx",["69"],[],"import \"./squadColors.css\";\r\nimport { useEffect, useState } from \"react\";\r\nimport ColorPicker from \"./colorPicker\";\r\n\r\nconst SquadColors = ({ setSquadColors, colors }) => {\r\n  const [baseColor, setBaseColor] = useState(colors.font);\r\n  const [secondColor, setSecondColor] = useState(colors.border);\r\n  const [thirdColor, setThirdColor] = useState(colors.bgr);\r\n\r\n   useEffect(() => {\r\n    colors = {\r\n      font: baseColor, \r\n      border: secondColor, \r\n      bgr: thirdColor \r\n    };\r\n    setSquadColors(colors);\r\n  }, []);\r\n\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"content\">\r\n        <p className=\"title\">Select team design</p>\r\n        <ColorPicker\r\n          text={\"Base color\"}\r\n          color={setBaseColor}\r\n          defaultColor={baseColor} \r\n        ></ColorPicker>\r\n        <ColorPicker\r\n          text={\"Second color\"}\r\n          color={setSecondColor}\r\n          defaultColor={secondColor}\r\n        ></ColorPicker>\r\n        <ColorPicker\r\n          text={\"Third color\"}\r\n          color={setThirdColor}\r\n          defaultColor={thirdColor}\r\n        ></ColorPicker>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SquadColors;\r\n","C:\\Users\\nicolas.martinez01\\Documents\\React\\TacticalCreator\\src\\components\\navBar\\squadSize.jsx",[],[],"C:\\Users\\nicolas.martinez01\\Documents\\React\\TacticalCreator\\src\\components\\navBar\\colorPicker.jsx",["70"],[]," import { useState } from \"react\";\r\nimport { SketchPicker } from \"react-color\";\r\n\r\nconst ColorPicker = ({ text, colors, defaultColor}) => {\r\n  const [toggleColorPickerBase, setToggleColorPickerBase] = useState(false);\r\n  const [baseColorsPicked, setBaseColorsPicked] = useState();\r\n\r\n  const toggleBaseColor = () => {\r\n    setToggleColorPickerBase(!toggleColorPickerBase);\r\n  };\r\n\r\n  return (\r\n    <div className=\"wrapper-btn\">\r\n      <div\r\n        className=\"btn-color\"\r\n        style={{ backgroundColor: defaultColor }}\r\n        onClick={toggleBaseColor}\r\n      >\r\n        {toggleColorPickerBase && (\r\n          <div>\r\n            <SketchPicker\r\n              color={baseColorsPicked}\r\n              onChange={(e)=> colors(e.hex)}\r\n              style={{ userSelect: \"none\" }}\r\n            ></SketchPicker>\r\n          </div>\r\n        )}\r\n      </div>\r\n      <p className=\"subtitle\">{text}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ColorPicker;\r\n","C:\\Users\\nicolas.martinez01\\Documents\\React\\TacticalCreator\\src\\hooks\\useDrag.jsx",["71","72"],[],"import { useState, useEffect } from \"react\";\r\n\r\nconst useDrag = (ref, deps = [], options) => {\r\n  const {\r\n    onPointerDown = () => {},\r\n    onPointerUp = () => {},\r\n    onPointerMove = () => {},\r\n    onDrag = () => {},\r\n  } = options;\r\n\r\n  const [isDragging, setIsDragging] = useState(false);\r\n\r\n  const handlePointerDown = (e) => {\r\n    setIsDragging(true);\r\n\r\n    onPointerDown(e);\r\n  };\r\n\r\n  const handlePointerUp = (e) => {\r\n    setIsDragging(false);\r\n\r\n    onPointerUp(e);\r\n  };\r\n\r\n  const handlePointerMove = (e) => {\r\n    onPointerMove(e);\r\n\r\n    if (isDragging) {\r\n      onDrag(e);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const element = ref.current;\r\n    if (element) {\r\n      element.addEventListener(\"pointerdown\", handlePointerDown);\r\n      element.addEventListener(\"pointerup\", handlePointerUp);\r\n      element.addEventListener(\"pointermove\", handlePointerMove);\r\n\r\n      return () => {\r\n        element.removeEventListener(\"pointerdown\", handlePointerDown);\r\n        element.removeEventListener(\"pointerup\", handlePointerUp);\r\n        element.removeEventListener(\"pointermove\", handlePointerMove);\r\n      };\r\n    }\r\n\r\n    return () => {};\r\n  }, [...deps, isDragging]);\r\n\r\n  return { isDragging };\r\n};\r\n\r\nexport default useDrag;\r\n",{"ruleId":"73","severity":1,"message":"74","line":11,"column":19,"nodeType":"75","messageId":"76","endLine":11,"endColumn":29,"suppressions":"77"},{"ruleId":"78","severity":1,"message":"79","line":56,"column":11,"nodeType":"80","endLine":56,"endColumn":61},{"ruleId":"81","severity":1,"message":"82","line":56,"column":11,"nodeType":"80","endLine":56,"endColumn":61},{"ruleId":"78","severity":1,"message":"79","line":64,"column":11,"nodeType":"80","endLine":64,"endColumn":67},{"ruleId":"81","severity":1,"message":"82","line":64,"column":11,"nodeType":"80","endLine":64,"endColumn":67},{"ruleId":"73","severity":1,"message":"83","line":2,"column":28,"nodeType":"75","messageId":"76","endLine":2,"endColumn":37},{"ruleId":"73","severity":1,"message":"84","line":20,"column":9,"nodeType":"75","messageId":"76","endLine":20,"endColumn":13,"suppressions":"85"},{"ruleId":"86","severity":1,"message":"87","line":11,"column":14,"nodeType":"88","endLine":15,"endColumn":6},{"ruleId":"73","severity":1,"message":"89","line":6,"column":28,"nodeType":"75","messageId":"76","endLine":6,"endColumn":47},{"ruleId":"86","severity":1,"message":"90","line":48,"column":6,"nodeType":"91","endLine":48,"endColumn":27,"suggestions":"92"},{"ruleId":"86","severity":1,"message":"93","line":48,"column":7,"nodeType":"94","endLine":48,"endColumn":14},"no-unused-vars","'setPattern' is assigned a value but never used.","Identifier","unusedVar",["95"],"jsx-a11y/anchor-has-content","Anchors must have content and the content must be accessible by a screen reader.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","'useEffect' is defined but never used.","'drag' is assigned a value but never used.",["96"],"react-hooks/exhaustive-deps","Assignments to the 'colors' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","ObjectExpression","'setBaseColorsPicked' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'handlePointerDown', 'handlePointerMove', 'handlePointerUp', and 'ref'. Either include them or remove the dependency array.","ArrayExpression",["97"],"React Hook useEffect has a spread element in its dependency array. This means we can't statically verify whether you've passed the correct dependencies.","SpreadElement",{"kind":"98","justification":"99"},{"kind":"98","justification":"99"},{"desc":"100","fix":"101"},"directive","","Update the dependencies array to be: [handlePointerDown, handlePointerMove, handlePointerUp, isDragging, ref]",{"range":"102","text":"103"},[1162,1183],"[handlePointerDown, handlePointerMove, handlePointerUp, isDragging, ref]"]