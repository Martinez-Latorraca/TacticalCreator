{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\n/* const useDrag = (ref, deps = [], options) => {\r\n  const {\r\n    onPointerDown = () => {},\r\n    onPointerUp = () => {},\r\n    onPointerMove = () => {},\r\n    onDrag = () => {},\r\n  } = options;\r\n\r\n  const [isDragging, setIsDragging] = useState(false);\r\n\r\n  const handlePointerDown = (e) => {\r\n    setIsDragging(true);\r\n\r\n    onPointerDown(e);\r\n  };\r\n\r\n  const handlePointerUp = (e) => {\r\n    setIsDragging(false);\r\n\r\n    onPointerUp(e);\r\n  };\r\n\r\n  const handlePointerMove = (e) => {\r\n    onPointerMove(e);\r\n\r\n    if (isDragging) {\r\n      onDrag(e);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const element = ref.current;\r\n    if (element) {\r\n      element.addEventListener(\"pointerdown\", handlePointerDown);\r\n      element.addEventListener(\"pointerup\", handlePointerUp);\r\n      element.addEventListener(\"pointermove\", handlePointerMove);\r\n\r\n      return () => {\r\n        element.removeEventListener(\"pointerdown\", handlePointerDown);\r\n        element.removeEventListener(\"pointerup\", handlePointerUp);\r\n        element.removeEventListener(\"pointermove\", handlePointerMove);\r\n      };\r\n    }\r\n\r\n    return () => {};\r\n  }, [...deps, isDragging]);\r\n\r\n  return { isDragging };\r\n}; */\n\nconst useDrag = function (ref) {\n  _s();\n\n  let deps = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  let options = arguments.length > 2 ? arguments[2] : undefined;\n  const {\n    onPointerDown = () => {},\n    onPointerMove = () => {}\n  } = options;\n  const [isDragging, setIsDragging] = useState(false);\n\n  const handlePointerDown = e => {\n    setIsDragging(true);\n    onPointerDown(e);\n  };\n\n  const handlePointerMove = e => {\n    if (isDragging) {\n      onPointerMove(e);\n    }\n  };\n\n  useEffect(() => {\n    const element = ref.current;\n\n    if (element) {\n      element.addEventListener(\"pointerdown\", handlePointerDown);\n      element.addEventListener(\"pointermove\", handlePointerMove);\n      return () => {\n        element.removeEventListener(\"pointerdown\", handlePointerDown);\n        element.removeEventListener(\"pointermove\", handlePointerMove);\n      };\n    }\n\n    return () => {};\n  }, [...deps, isDragging]);\n  return {\n    isDragging\n  };\n};\n\n_s(useDrag, \"zjq2sSup4GXUtmqwnFzGU3LD3go=\");\n\nexport default useDrag;","map":{"version":3,"names":["useState","useEffect","useDrag","ref","deps","options","onPointerDown","onPointerMove","isDragging","setIsDragging","handlePointerDown","e","handlePointerMove","element","current","addEventListener","removeEventListener"],"sources":["G:/Portfolio/TacticalCreator/TacticalCreator/src/hooks/useDrag.jsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\n\r\n/* const useDrag = (ref, deps = [], options) => {\r\n  const {\r\n    onPointerDown = () => {},\r\n    onPointerUp = () => {},\r\n    onPointerMove = () => {},\r\n    onDrag = () => {},\r\n  } = options;\r\n\r\n  const [isDragging, setIsDragging] = useState(false);\r\n\r\n  const handlePointerDown = (e) => {\r\n    setIsDragging(true);\r\n\r\n    onPointerDown(e);\r\n  };\r\n\r\n  const handlePointerUp = (e) => {\r\n    setIsDragging(false);\r\n\r\n    onPointerUp(e);\r\n  };\r\n\r\n  const handlePointerMove = (e) => {\r\n    onPointerMove(e);\r\n\r\n    if (isDragging) {\r\n      onDrag(e);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const element = ref.current;\r\n    if (element) {\r\n      element.addEventListener(\"pointerdown\", handlePointerDown);\r\n      element.addEventListener(\"pointerup\", handlePointerUp);\r\n      element.addEventListener(\"pointermove\", handlePointerMove);\r\n\r\n      return () => {\r\n        element.removeEventListener(\"pointerdown\", handlePointerDown);\r\n        element.removeEventListener(\"pointerup\", handlePointerUp);\r\n        element.removeEventListener(\"pointermove\", handlePointerMove);\r\n      };\r\n    }\r\n\r\n    return () => {};\r\n  }, [...deps, isDragging]);\r\n\r\n  return { isDragging };\r\n}; */\r\n\r\nconst useDrag = (ref, deps = [], options) => {\r\n  const { onPointerDown = () => {}, onPointerMove = () => {} } = options;\r\n\r\n  const [isDragging, setIsDragging] = useState(false);\r\n\r\n  const handlePointerDown = (e) => {\r\n    setIsDragging(true);\r\n    onPointerDown(e);\r\n  };\r\n\r\n  const handlePointerMove = (e) => {\r\n    if (isDragging) {\r\n      onPointerMove(e);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const element = ref.current;\r\n    if (element) {\r\n      element.addEventListener(\"pointerdown\", handlePointerDown);\r\n      element.addEventListener(\"pointermove\", handlePointerMove);\r\n      return () => {\r\n        element.removeEventListener(\"pointerdown\", handlePointerDown);\r\n        element.removeEventListener(\"pointermove\", handlePointerMove);\r\n      };\r\n    }\r\n    return () => {};\r\n  }, [...deps, isDragging]);\r\n\r\n  return { isDragging };\r\n};\r\n\r\nexport default useDrag;\r\n"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,OAAO,GAAG,UAACC,GAAD,EAA6B;EAAA;;EAAA,IAAvBC,IAAuB,uEAAhB,EAAgB;EAAA,IAAZC,OAAY;EAC3C,MAAM;IAAEC,aAAa,GAAG,MAAM,CAAE,CAA1B;IAA4BC,aAAa,GAAG,MAAM,CAAE;EAApD,IAAyDF,OAA/D;EAEA,MAAM,CAACG,UAAD,EAAaC,aAAb,IAA8BT,QAAQ,CAAC,KAAD,CAA5C;;EAEA,MAAMU,iBAAiB,GAAIC,CAAD,IAAO;IAC/BF,aAAa,CAAC,IAAD,CAAb;IACAH,aAAa,CAACK,CAAD,CAAb;EACD,CAHD;;EAKA,MAAMC,iBAAiB,GAAID,CAAD,IAAO;IAC/B,IAAIH,UAAJ,EAAgB;MACdD,aAAa,CAACI,CAAD,CAAb;IACD;EACF,CAJD;;EAMAV,SAAS,CAAC,MAAM;IACd,MAAMY,OAAO,GAAGV,GAAG,CAACW,OAApB;;IACA,IAAID,OAAJ,EAAa;MACXA,OAAO,CAACE,gBAAR,CAAyB,aAAzB,EAAwCL,iBAAxC;MACAG,OAAO,CAACE,gBAAR,CAAyB,aAAzB,EAAwCH,iBAAxC;MACA,OAAO,MAAM;QACXC,OAAO,CAACG,mBAAR,CAA4B,aAA5B,EAA2CN,iBAA3C;QACAG,OAAO,CAACG,mBAAR,CAA4B,aAA5B,EAA2CJ,iBAA3C;MACD,CAHD;IAID;;IACD,OAAO,MAAM,CAAE,CAAf;EACD,CAXQ,EAWN,CAAC,GAAGR,IAAJ,EAAUI,UAAV,CAXM,CAAT;EAaA,OAAO;IAAEA;EAAF,CAAP;AACD,CA9BD;;GAAMN,O;;AAgCN,eAAeA,OAAf"},"metadata":{},"sourceType":"module"}